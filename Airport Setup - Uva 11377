#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <string>

#define REP(X, Y) for(int (X) = 0; (X) < (Y); ++(X))
#define FOR(X, Y, Z) for(int (X) = (Y); (X) <= (Z); ++(X))
#define RFOR(X, Y, Z) for(int (X) = (Y); (X) >= (Z); --(X))
#define SZ(Z) ((int) (Z).size)
#define ALL(W) (W).begin(), (W).end()
#define RESET(C, V) memset(C, V, sizeof(C))
#define PB push_back
#define MP make_pair
#define A first
#define B second
#define MX(Z, Y) Z = max((Z), (Y))
#define MN(X, Y) X = min((X), (Y))
#define FORIT(X, Y) for(typeof((Y).begin()) X = (Y).begin(); X != (Y).end(); X++)
#define RFORIT(X, Y) for(typeof(Y).rbegin()) X = (Y).rbegin(); X != (Y).rend(); X++)
#define INF 2147483647
#define _Pi(i) printf("%d", i)
#define _Pd(nd) printf("n.%d", d)
#define _Pc(c) printf("%c", c)
#define _Ps(s) printf("%s", s)
#define _Si(i) scanf("%d", &i)
#define _Sd(d) scanf("%d", &d)
#define _Sc(c) scanf("%c", &c)
#define _Ss(s) scanf("%s", &s)

#define isOn(S, j) (S & (1 << j))
#define setBit(S, j) (S |= (1 << j))
#define clearBit(S, j) (S &= ~(1 << j))
#define toggleBit(S, j) (S ^= (1 << j))
#define lowBit(S) (S & (-S))
#define setAll(S, n) (S = (1 << n) - 1)
#define modulo(S, N) ((S) & (N - 1))
#define isPowerOfTwo(S) (!(S & (S - 1)))
#define nearestPowerOfTwo(S) ((int)pow(2.0, (int)((log((double)S) / log(2.0)) + 0.5)))
#define turnOffLastBit(S) ((S) & (S - 1))
#define turnOnLastZero(S) ((S) | (S + 1))
#define turnOffLastConsecutiveBits(S) ((S) & (S + 1))
#define turnOnLastConsecutiveZeroes(S) ((S) | (S - 1))

using namespace std;

typedef long long LL;
typedef vector<int> vi;
typedef vector<string> vs;
typedef vector<double> vd;
typedef pair<int, int> ii;
typedef map<char, int> mci;
typedef vector<ii> vii;
typedef vector<vi> vvi;

int main(){
    //freopen("in.txt","r",stdin);

    int x, n, m, k;
    int tc = 0;
    cin >> x;
    while(x--){
        int n, m, k;
        int u, v, q;
        int port[2010];
        int dist[2010];
        vector<vii> adjList(2010);

        cin >> n >> m >> k;
        adjList.assign(n, vii());

        REP(i,2011) port[i] = 0;

        REP(j,k){
            int a;
            cin >> a;
            port[a] = 1;
        }

        REP(i,m){
            int u, v;
            cin >> u >> v;
            adjList[u].push_back(ii(v, port[v] ? 0 : 1));
            adjList[v].push_back(ii(u, port[u] ? 0 : 1));
        }

        cin >> q;

        printf("Case %d:\n", ++tc);
        while(q--){
            int s, d;
            cin >> s >> d;

            REP(i,2011) dist[i] = INF;

            if(s == d){
                printf("0\n");
                continue;
            }


            dist[s] = port[s] ? 0 : 1;

            priority_queue<ii, vii, greater<ii> > pq;
            pq.push(ii(0,s));

            while(!pq.empty()){
                ii front = pq.top(); pq.pop();
                int d = front.first, u = front.second;

                if(d > dist[u]) continue;

                REP(i, (int)adjList[u].size()){
                    ii v = adjList[u][i];
                    if(dist[u] + v.second < dist[v.first]){
                        dist[v.first] = dist[u] + v.second;
                        pq.push(ii(dist[v.first], v.first));
                    }
                }
            }
            if(dist[d] == INF) printf("-1\n");
            else printf("%d\n", dist[d]);
        }
        printf("\n");
    }
}
